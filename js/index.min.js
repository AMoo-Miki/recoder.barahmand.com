const rawData=[],finalData=[],columnData=[],excelDiv=document.querySelector(".excel"),transformationsForm=document.querySelector("#transformations"),fileSelector=document.querySelector("#srcFile"),selectedColumnsList=document.querySelector("#selectedCols");let isPointerPressed=!1,wasColumnSelected=!1,workbook,worksheet,filename,updateSelectionsFrame;const render=()=>{const a=columnData.length;var e=columnData.map((e,t)=>`<abbr class="header col-${t%a%2?"odd":"even"} col-${t%a}" title="${e.label.replace(/"/g,"&quot;")}" data-idx="${t}">${e.label}</abbr>`).join(""),t=finalData.flat().map((e,t)=>`<abbr class="row-${Math.floor(t/a)%2?"odd":"even"} col-${t%a%2?"odd":"even"} col-${t%a}" title="${e?.replace(/"/g,"&quot;")}">${e??""}</abbr>`).join("");const l=document.createRange().createContextualFragment(e+t),o=columnData.filter(e=>e.selected).map(e=>".col-"+e.idx);o.length&&l.querySelectorAll(o.join(", ")).forEach(e=>{e.classList.add("selected")}),excelDiv.textContent="",excelDiv.appendChild(l),excelDiv.className="excel cols-"+a,updateSelections()},updateCSS=()=>{var e=columnData.length;let t=document.head.querySelector(".cols-def-"+e);if(!t){(t=document.createElement("style")).classList.add("cols-def-"+columnData.length),document.head.appendChild(t);const a=t.sheet;a.insertRule(`.cols-${e} { grid-template-columns: repeat(${e}, 16rem); }`,0),a.insertRule(`.cols-${e} > *:nth-child(${e}n + 1) { border-left: 0; }`,1),a.insertRule(`.cols-${e} > *:nth-last-child(-n + ${e}) { border-bottom: 0; }`,2)}},recode=(e,a)=>{const l=e.split(",");rawData.forEach((e,t)=>{l.forEach(e=>{finalData[t][e]=a.get(rawData[t][e].lower)})}),render()},fileChanged=e=>{e&&(document.body.classList.add("file-selected","file-loading"),setTimeout(async()=>{await loadFile(e),requestAnimationFrame(()=>{document.body.classList.remove("file-loading")})},1e3))},loadFile=async e=>{if(e){filename=e.name,workbook=XLSX.read(await e.arrayBuffer()),worksheet=workbook.Sheets[Object.keys(workbook.Sheets)[0]];const[t,...a]=XLSX.utils.sheet_to_json(worksheet,{header:1,raw:!1,defval:"",blankrows:!1}).map(e=>e.map(e=>e.trim()));rawData.splice(0,rawData.length),rawData.push(...a.map(e=>e.map(e=>({value:e,lower:e?.toLowerCase()||""})))),finalData.splice(0,finalData.length),finalData.push(...a),columnData.splice(0,columnData.length);e=t.map((e,t)=>{const a=new Map;return rawData.forEach(e=>{e[t].lower&&!a.has(e[t].lower)&&a.set(e[t].lower,e[t].value)}),{label:e,idx:t,values:a}});columnData.push(...e),render(),updateCSS()}},selectColumn=(e,t=!0)=>{columnData[e].selected=t,excelDiv.querySelectorAll(".col-"+e).forEach(e=>{e.classList.toggle("selected",t)}),updateSelections()},updateSelections=()=>{const e=columnData.filter(e=>e.selected);var t=0!==e.length;if(excelDiv.classList.toggle("no-selections",!t),excelDiv.classList.toggle("has-selections",t),t){t=e.map(e=>`<a>${e.label}</a>`).join("");const a=document.createRange().createContextualFragment(t),l=new Map,o=e.map(e=>e.idx);o.forEach(e=>{columnData[e].values.forEach((e,t)=>l.set(t,e))});t=Array.from(l.values()).sort().map((e,t)=>`<div><input type="number" value="${t+1}" name="${e.toLowerCase().replace(/"/g,"&quot;")}"><label>${e}</label></div>`).join("");const r=document.createRange().createContextualFragment(t+`<input name="cols" type="hidden" value="${o.join(",")}" />`),n=transformationsForm.querySelector('input[name="cols"]');n&&(n.value=o.join(",")),updateSelectionsFrame&&cancelAnimationFrame(updateSelectionsFrame),updateSelectionsFrame=requestAnimationFrame(()=>{selectedColumnsList.replaceChildren(a),r.childNodes.length===transformationsForm.childNodes.length&&Array.from(r.childNodes).every((e,t)=>e.isEqualNode(transformationsForm.childNodes[t]))||transformationsForm.replaceChildren(r)})}},getColumnForCell=e=>{let t;return Array.from(e.classList).some(e=>{if(/col-\d+/.test(e))return t=e,!0}),t},pointerDragged=e=>{if(isPointerPressed){const t=e.target.closest("abbr");t&&!t.classList.contains("selected")&&(e=getColumnForCell(t))&&(e=excelDiv.querySelector(".header."+e),e=parseInt(e.dataset.idx),selectColumn(e,!0))}};fileSelector.addEventListener("change",e=>{fileChanged(e.target.files?.[0])},!1),document.getElementById("reset").addEventListener("click",()=>{rawData.splice(0,rawData.length),finalData.splice(0,finalData.length),columnData.splice(0,columnData.length),fileSelector.value=null,excelDiv.textContent="",excelDiv.className="excel blank",excelDiv.appendChild(document.createRange().createContextualFragment('<label for="srcFile"><span>Drag and drop an Excel file here to begin.<br>You can also click here or use the Browse button to add a file.</span></label>')),document.body.classList.remove("file-selected")},!1),excelDiv.addEventListener("pointerdown",e=>{e=e.target.closest("abbr");if(e){e=getColumnForCell(e);if(e){const t=excelDiv.querySelector(".header."+e);e=parseInt(t.dataset.idx);wasColumnSelected=t.classList.contains("selected"),selectColumn(e,!0),isPointerPressed=e}}}),document.addEventListener("pointerup",e=>{var e=e.target.closest("abbr");!e||(e=getColumnForCell(e))&&(e=excelDiv.querySelector(".header."+e),e=parseInt(e.dataset.idx),isPointerPressed===e&&wasColumnSelected&&selectColumn(e,!1),isPointerPressed=!1,wasColumnSelected=!1)},!1),excelDiv.addEventListener("pointerover",pointerDragged,!1),excelDiv.addEventListener("drop",e=>{e.preventDefault(),document.body.classList.contains("file-loading")||(fileChanged(e.dataTransfer.files?.[0]),fileSelector.files=e.dataTransfer.files)},!1),excelDiv.addEventListener("dragover",e=>{e.preventDefault(),document.body.classList.contains("file-loading")||excelDiv.classList.add("dragover")}),excelDiv.addEventListener("dragleave",e=>{e.preventDefault(),excelDiv.classList.remove("dragover")}),document.querySelector("#clear-cols").addEventListener("click",e=>{columnData.forEach(e=>e.selected=!1),excelDiv.querySelectorAll(".col-even.selected, .col-odd.selected").forEach(e=>{e.classList.remove("selected")}),updateSelections()}),document.querySelector("#apply-transformation").addEventListener("click",e=>{const t=new Map;transformationsForm.querySelectorAll('input[type="number"]').forEach(e=>{t.set(e.getAttribute("name").replace(/&quot;/g,'"'),e.value)});var a=transformationsForm.querySelector('input[name="cols"]').value;recode(a,t)}),document.querySelector("#download").addEventListener("click",e=>{e.preventDefault();var a=XLSX.utils.decode_range(worksheet["!ref"]);for(let t=a.s.r+1;t<=a.e.r;++t)for(let e=a.s.c;e<=a.e.c;++e){var l=XLSX.utils.encode_cell({r:t,c:e});worksheet[l]&&void 0!==finalData[t-1]?.[e]&&(worksheet[l].v=finalData[t-1][e])}XLSX.writeFile(workbook,filename.replace(/\.[^.]*$/,"")+"-recoded.xlsx",{compression:!0,type:"xlsx"})});